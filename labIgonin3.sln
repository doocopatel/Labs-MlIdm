#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <sstream>

using namespace std;

int main() {

    cout << "set elements of array A (with space): ";
    string lineA;
    getline(cin, lineA);

    set<string> setA;
    stringstream ssA(lineA);
    string a;
    while (ssA >> a) {
        setA.insert(a);
    }

    if (setA.empty()) {
        cout << "Array can't be empty." << endl;
        return 1;
    }

    cout << "set elements of array B (with space):: ";
    string lineB;
    getline(cin, lineB);

    set<string> setB;
    stringstream ssB(lineB);
    string b;
    while (ssB >> b) {
        setB.insert(b);
    }

    if (setB.empty()) {
        cout << "Array can't be empty." << endl;
        return 1;
    }


    cout << "Set pair of elements 'a b' (one pair per string):\n";
    cout << "empty steing is end\n";

    vector<pair<string, string>> relation;
    map<string, string> mapping; 

    while (true) {
        string line;
        getline(cin, line);
        if (line.empty()) break;

        stringstream ss(line);
        string first, second;

        if (!(ss >> first >> second)) {
            cout << "invalid format.\n";
            continue;
        }

        if (!setA.count(first) || !setB.count(second)) {
            cout << "Need pair from Array A or B.\n";
            continue;
        }

        relation.emplace_back(first, second);


        if (mapping.count(first)) {
            if (mapping[first] != second) {
                cout << "Function rule error: element '" << first
                    << "' is already mapped to'" << mapping[first] << "'.\n";
                cout << "It's not a function.\n";
                return 0;
            }
        }
        else {
            mapping[first] = second;
        }
    }


    cout << "The relation is a function.\n";
    return 0;
}
